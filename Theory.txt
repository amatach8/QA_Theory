1. Что подразумевается под тестовой средой?
Тестовая среда - это настройка окружения для тестирования (ОС и ее разрядность, браузер и его версия )
Есть несколько сред:
 - Dev - пишется код, юнит-тесты, исправляются баги - среда разработчиков.
 - Test - здесь проводится тестирование. Если отдельная среда отсутствует, тестирование проводится в Dev среде.
 - Integration - тестируется взаимодействие модулей и систем.
 - Preview - среда максимально приближенная к Prod (имеет те же характеристики). Используется для финальной проверки продукта.
 - Production - в этой среде работают пользователи.

2. В чем отличие build от release?
   Билд - это сборка продукта, где был разработан новый модуль. Эта сборка передается команде тестирования для проведения тестов.
   Релиз - это версия продукта после завершения разработки и тестирования, которая передаётся заказчику или конечному пользователю. 

3. Основные фазы тестирования.
   Pre-Alpha - программа находится на первой стадии развития, пока может иметь не весь функционал, но уже присутствует интерфейс.
      Продолжается разработка и тестирование. Не поставляется пользователю.
   Alpha - ранняя версия ПО. Предназначена для знакомства с функционалом и отладки. 
      Тестирование может производиться как внутри организации, так и на аутсорсе.
   Beta - практически готовая версия, стабильное ПО, к использованию привлекаются будущие пользователи продукта. 
      Версия может раздаваться бесплатно, чтобы привлечь пользователей и получить реальные отзывы по качеству, внести исправления.
   RC (Release Candidate) - вносятся изменения на основе отзывов пользователей Beta версии, исправляются ошибки. 
      В функционал изменения не вносятся.
   Final (Release, Stable, Release to manufacturing) - стабильная версия, предполагается, что в ней уже не должно быт ошибок. 
      ПО выпущено для пользователя.

4. Принципы тестирования.
   Принцип №1 -  Тестирование демонстрирует наличие дефектов.
                 Тестирование может показать, что в продукте есть дефекты, но оно не может демонстрировать, что дефектов нет вообще.
                 Мы можем только снизить вероятность их обнаружения, но не утверждать что дефектов нет, если тестирование их не 
                 обнаружило.
   Принцип №2 -  Исчерпывающее тестирование недостижимо.
                 Невозможно протестировать абсолютно всё. Это требует огромного количества времени. В целях экономии времени нужно 
                 использовать техники тест-дизайна, благодаря которым мы можем покрыть тестами необходимый функционал с наименьшими 
                 затратами времени и сил и при этом сократить риски обнаружения дефектов.
   Принцип №3 -  Раннее тестирование.
                 Тестирование необходимо начинать на самых ранних этапах. Это поможет избежать некоторых ошибок в будущем и сократит 
                 затраты на их исправление. Чем раньше обнаружен дефект, тем меньше денег будет затрачено на его исправление.
   Принцип №4 -  Скопление/кластеризация дефектов.
                 Большое количество дефектов концентрируется в небольшом количестве модулей. По правилу Парето: в 20% модулей может 
                 находится до 80% дефектов. Поэтому нужно правильно распределять усилия при тестировании и держать такие модули в 
                 фокусе.
   Принцип №5 -  Парадокс пестицида.
                 Если постоянно использовать одни и те же тесты, то продут привыкает и новые дефекты, которые появились в результате 
                 развития продукта, не будут выявляться. Поэтому необходимо периодически обновлять чек-листы и добавлять новые тест-
                 кейсы. Также чтобы избежать этой проблемы, можно менять тестировщиков в процессе тестирования одного и того же 
                 функционала на разных этапах разработки.
   Принцип №6 -  Тестирование зависит от контекста.
                 Выбор техники тестирования напрямую зависит от особенностей самой программы. Например, от сферы, в которой он будет
                 применяться, от количества будущих пользователей, требований заказчика к процессу тестирования. 
   Принцип №7 -  Заблуждение об отсутствии ошибок. 
                 Отсутствие дефектов при проведении тестирования не является основным критерием выпуска продукта в релиз. Главная цель -
                 соответствие продукта требованиям и ожиданиям заказчика. Заказчик должен быть доволен результатом, пользователям должно
                 быть удобно использовать продукт и они должны достигать своей цели в процессе его использования.

5. Что такое импакт анализ?
   Импакт анализ - это процесс исследования изменений, которые могут произойти в результате введения нового функционала либо внесения 
   изменений в существующий функционал. 
   Мы должны определить, какие части проекта эти изменения могут затронуть. И затем протестировать все участки, на которых может быть 
   оказано влияние, чтобы исключить появление новых багов. 
   
6. Что такое независимое тестирование?
   Речь идет о тестировании, которое проводится сотрудниками, имеющими нейтральное отношение к тестируемому продукту. 
   Специалисты из команды, которая принимала участие в разработке продукта, не всегда могут объективно провести тестирование, могут 
   упустить из виду некоторые ошибки. Чтобы решить эту проблему, для независимого тестирования могут привлечь команду тестирования с 
   другого проекта либо из сторонней организации (аутсорс).
